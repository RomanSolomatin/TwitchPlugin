// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Public/TwitchPlugin.h"
#include "TwitchPlugin.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1TwitchPlugin() {}
class UScriptStruct* FHTTPData::StaticStruct()
{
	extern TWITCHPLUGIN_API class UPackage* Z_Construct_UPackage__Script_TwitchPlugin();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern TWITCHPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FHTTPData();
		extern TWITCHPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FHTTPData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FHTTPData, Z_Construct_UPackage__Script_TwitchPlugin(), TEXT("HTTPData"), sizeof(FHTTPData), Get_Z_Construct_UScriptStruct_FHTTPData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FHTTPData(FHTTPData::StaticStruct, TEXT("/Script/TwitchPlugin"), TEXT("HTTPData"), false, nullptr, nullptr);
static struct FScriptStruct_TwitchPlugin_StaticRegisterNativesFHTTPData
{
	FScriptStruct_TwitchPlugin_StaticRegisterNativesFHTTPData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("HTTPData")),new UScriptStruct::TCppStructOps<FHTTPData>);
	}
} ScriptStruct_TwitchPlugin_StaticRegisterNativesFHTTPData;
	void UTwitchBlueprintFunctionLibrary::StaticRegisterNativesUTwitchBlueprintFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTwitchBlueprintFunctionLibrary::StaticClass(), "GetTwitchChatters",(Native)&UTwitchBlueprintFunctionLibrary::execGetTwitchChatters);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchBlueprintFunctionLibrary::StaticClass(), "GetTwitchFollowers",(Native)&UTwitchBlueprintFunctionLibrary::execGetTwitchFollowers);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchBlueprintFunctionLibrary::StaticClass(), "GetTwitchSubscribers",(Native)&UTwitchBlueprintFunctionLibrary::execGetTwitchSubscribers);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchBlueprintFunctionLibrary::StaticClass(), "GetTwitchViewers",(Native)&UTwitchBlueprintFunctionLibrary::execGetTwitchViewers);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchBlueprintFunctionLibrary::StaticClass(), "GetTwitchViews",(Native)&UTwitchBlueprintFunctionLibrary::execGetTwitchViews);
	}
	IMPLEMENT_CLASS(UTwitchBlueprintFunctionLibrary, 2421935567);
	void UTwitchComponent::StaticRegisterNativesUTwitchComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTwitchComponent::StaticClass(), "TwitchConnect",(Native)&UTwitchComponent::execTwitchConnect);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchComponent::StaticClass(), "TwitchDisconnect",(Native)&UTwitchComponent::execTwitchDisconnect);
		FNativeFunctionRegistrar::RegisterFunction(UTwitchComponent::StaticClass(), "TwitchMessageChannel",(Native)&UTwitchComponent::execTwitchMessageChannel);
	}
	IMPLEMENT_CLASS(UTwitchComponent, 2737618297);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();

	TWITCHPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FHTTPData();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchChatters();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchFollowers();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchSubscribers();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViewers();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViews();
	TWITCHPLUGIN_API class UClass* Z_Construct_UClass_UTwitchBlueprintFunctionLibrary_NoRegister();
	TWITCHPLUGIN_API class UClass* Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerDisconnected__DelegateSignature();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerConnected__DelegateSignature();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserJoin__DelegateSignature();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserLeft__DelegateSignature();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchReceivedMessage__DelegateSignature();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchConnect();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchDisconnect();
	TWITCHPLUGIN_API class UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchMessageChannel();
	TWITCHPLUGIN_API class UClass* Z_Construct_UClass_UTwitchComponent_NoRegister();
	TWITCHPLUGIN_API class UClass* Z_Construct_UClass_UTwitchComponent();
	TWITCHPLUGIN_API class UPackage* Z_Construct_UPackage__Script_TwitchPlugin();
	UScriptStruct* Z_Construct_UScriptStruct_FHTTPData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_TwitchPlugin();
		extern uint32 Get_Z_Construct_UScriptStruct_FHTTPData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("HTTPData"), sizeof(FHTTPData), Get_Z_Construct_UScriptStruct_FHTTPData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HTTPData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FHTTPData>, EStructFlags(0x00000001));
			UProperty* NewProp_data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("data"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(data, FHTTPData), 0x0010000000000005);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, FHTTPData), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_data, TEXT("Category"), TEXT("Utilities|HTTP|Struct"));
			MetaData->SetValue(NewProp_data, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_name, TEXT("Category"), TEXT("Utilities|HTTP|Struct"));
			MetaData->SetValue(NewProp_name, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FHTTPData_CRC() { return 3541180759U; }
	UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchChatters()
	{
		struct TwitchBlueprintFunctionLibrary_eventGetTwitchChatters_Parms
		{
			FString Username;
			int32 Viewers;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTwitchChatters"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(TwitchBlueprintFunctionLibrary_eventGetTwitchChatters_Parms));
			UProperty* NewProp_Viewers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Viewers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Viewers, TwitchBlueprintFunctionLibrary_eventGetTwitchChatters_Parms), 0x0010000000000180);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, TwitchBlueprintFunctionLibrary_eventGetTwitchChatters_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Twitch Chatters"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Get Chatters"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchFollowers()
	{
		struct TwitchBlueprintFunctionLibrary_eventGetTwitchFollowers_Parms
		{
			FString Username;
			int32 Followers;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTwitchFollowers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(TwitchBlueprintFunctionLibrary_eventGetTwitchFollowers_Parms));
			UProperty* NewProp_Followers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Followers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Followers, TwitchBlueprintFunctionLibrary_eventGetTwitchFollowers_Parms), 0x0010000000000180);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, TwitchBlueprintFunctionLibrary_eventGetTwitchFollowers_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Twitch Followers"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Get Followers"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchSubscribers()
	{
		struct TwitchBlueprintFunctionLibrary_eventGetTwitchSubscribers_Parms
		{
			FString Username;
			int32 Subscribers;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTwitchSubscribers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(TwitchBlueprintFunctionLibrary_eventGetTwitchSubscribers_Parms));
			UProperty* NewProp_Subscribers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Subscribers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Subscribers, TwitchBlueprintFunctionLibrary_eventGetTwitchSubscribers_Parms), 0x0010000000000180);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, TwitchBlueprintFunctionLibrary_eventGetTwitchSubscribers_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Twitch Subscribers"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Get Subscribers"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViewers()
	{
		struct TwitchBlueprintFunctionLibrary_eventGetTwitchViewers_Parms
		{
			FString Username;
			int32 Viewers;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTwitchViewers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(TwitchBlueprintFunctionLibrary_eventGetTwitchViewers_Parms));
			UProperty* NewProp_Viewers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Viewers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Viewers, TwitchBlueprintFunctionLibrary_eventGetTwitchViewers_Parms), 0x0010000000000180);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, TwitchBlueprintFunctionLibrary_eventGetTwitchViewers_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Twitch Viewers"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Get Viewers"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViews()
	{
		struct TwitchBlueprintFunctionLibrary_eventGetTwitchViews_Parms
		{
			FString Username;
			int32 Views;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTwitchViews"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(TwitchBlueprintFunctionLibrary_eventGetTwitchViews_Parms));
			UProperty* NewProp_Views = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Views"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Views, TwitchBlueprintFunctionLibrary_eventGetTwitchViews_Parms), 0x0010000000000180);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, TwitchBlueprintFunctionLibrary_eventGetTwitchViews_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Twitch Views"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Get Views"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTwitchBlueprintFunctionLibrary_NoRegister()
	{
		return UTwitchBlueprintFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UTwitchBlueprintFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_TwitchPlugin();
			OuterClass = UTwitchBlueprintFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchChatters());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchFollowers());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchSubscribers());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViewers());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViews());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchChatters(), "GetTwitchChatters"); // 4237781549
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchFollowers(), "GetTwitchFollowers"); // 1062590819
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchSubscribers(), "GetTwitchSubscribers"); // 3225375372
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViewers(), "GetTwitchViewers"); // 3072387061
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchBlueprintFunctionLibrary_GetTwitchViews(), "GetTwitchViews"); // 2013448181
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TwitchBlueprintFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TwitchBlueprintFunctionLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTwitchBlueprintFunctionLibrary(Z_Construct_UClass_UTwitchBlueprintFunctionLibrary, &UTwitchBlueprintFunctionLibrary::StaticClass, TEXT("UTwitchBlueprintFunctionLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTwitchBlueprintFunctionLibrary);
	UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerDisconnected__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_TwitchPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchServerDisconnected__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerConnected__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_TwitchPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchServerConnected__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserJoin__DelegateSignature()
	{
		struct _Script_TwitchPlugin_eventTwitchUserJoin_Parms
		{
			FString Channel;
			FString Name;
		};
		UObject* Outer=Z_Construct_UPackage__Script_TwitchPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchUserJoin__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_TwitchPlugin_eventTwitchUserJoin_Parms));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, _Script_TwitchPlugin_eventTwitchUserJoin_Parms), 0x0010000000000080);
			UProperty* NewProp_Channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Channel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Channel, _Script_TwitchPlugin_eventTwitchUserJoin_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserLeft__DelegateSignature()
	{
		struct _Script_TwitchPlugin_eventTwitchUserLeft_Parms
		{
			FString Channel;
			FString Name;
		};
		UObject* Outer=Z_Construct_UPackage__Script_TwitchPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchUserLeft__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_TwitchPlugin_eventTwitchUserLeft_Parms));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, _Script_TwitchPlugin_eventTwitchUserLeft_Parms), 0x0010000000000080);
			UProperty* NewProp_Channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Channel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Channel, _Script_TwitchPlugin_eventTwitchUserLeft_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_TwitchPlugin_TwitchReceivedMessage__DelegateSignature()
	{
		struct _Script_TwitchPlugin_eventTwitchReceivedMessage_Parms
		{
			FString Channel;
			FString User;
			FString Message;
		};
		UObject* Outer=Z_Construct_UPackage__Script_TwitchPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchReceivedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_TwitchPlugin_eventTwitchReceivedMessage_Parms));
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, _Script_TwitchPlugin_eventTwitchReceivedMessage_Parms), 0x0010000000000080);
			UProperty* NewProp_User = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("User"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(User, _Script_TwitchPlugin_eventTwitchReceivedMessage_Parms), 0x0010000000000080);
			UProperty* NewProp_Channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Channel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Channel, _Script_TwitchPlugin_eventTwitchReceivedMessage_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchConnect()
	{
		UObject* Outer=Z_Construct_UClass_UTwitchComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchConnect"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Connect to Twitch"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Disconnect"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchDisconnect()
	{
		UObject* Outer=Z_Construct_UClass_UTwitchComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchDisconnect"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Disconnect From Twitch"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Disconnect"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTwitchComponent_TwitchMessageChannel()
	{
		struct TwitchComponent_eventTwitchMessageChannel_Parms
		{
			FString Message;
		};
		UObject* Outer=Z_Construct_UClass_UTwitchComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TwitchMessageChannel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TwitchComponent_eventTwitchMessageChannel_Parms));
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, TwitchComponent_eventTwitchMessageChannel_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Twitch|Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Send Message to the Channel on Twitch"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Twitch Send Message"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
			MetaData->SetValue(NewProp_Message, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTwitchComponent_NoRegister()
	{
		return UTwitchComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UTwitchComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneComponent();
			Z_Construct_UPackage__Script_TwitchPlugin();
			OuterClass = UTwitchComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchComponent_TwitchConnect());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchComponent_TwitchDisconnect());
				OuterClass->LinkChild(Z_Construct_UFunction_UTwitchComponent_TwitchMessageChannel());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_oAuth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("oAuth"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(oAuth, UTwitchComponent), 0x0010000000000001);
				UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, UTwitchComponent), 0x0010000000000001);
				UProperty* NewProp_ServerDisconnected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ServerDisconnected"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ServerDisconnected, UTwitchComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerDisconnected__DelegateSignature());
				UProperty* NewProp_ServerConnected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ServerConnected"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ServerConnected, UTwitchComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerConnected__DelegateSignature());
				UProperty* NewProp_UserJoined = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserJoined"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(UserJoined, UTwitchComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserJoin__DelegateSignature());
				UProperty* NewProp_UserLeft = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(UserLeft, UTwitchComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserLeft__DelegateSignature());
				UProperty* NewProp_ReceivedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReceivedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ReceivedMessage, UTwitchComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_TwitchPlugin_TwitchReceivedMessage__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchComponent_TwitchConnect(), "TwitchConnect"); // 4292497116
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchComponent_TwitchDisconnect(), "TwitchDisconnect"); // 3856616164
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTwitchComponent_TwitchMessageChannel(), "TwitchMessageChannel"); // 2615616718
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Trigger PhysicsVolume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TwitchComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_oAuth, TEXT("Category"), TEXT("TwitchComponent"));
				MetaData->SetValue(NewProp_oAuth, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_Username, TEXT("Category"), TEXT("TwitchComponent"));
				MetaData->SetValue(NewProp_Username, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_ServerDisconnected, TEXT("Category"), TEXT("Twitch|Events"));
				MetaData->SetValue(NewProp_ServerDisconnected, TEXT("DisplayName"), TEXT("Disconnected from Twitch IRC Server"));
				MetaData->SetValue(NewProp_ServerDisconnected, TEXT("Keywords"), TEXT("Twitch Server Disconnected"));
				MetaData->SetValue(NewProp_ServerDisconnected, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_ServerConnected, TEXT("Category"), TEXT("Twitch|Events"));
				MetaData->SetValue(NewProp_ServerConnected, TEXT("DisplayName"), TEXT("Connected to Twitch IRC Server"));
				MetaData->SetValue(NewProp_ServerConnected, TEXT("Keywords"), TEXT("Twitch Server Connected"));
				MetaData->SetValue(NewProp_ServerConnected, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_UserJoined, TEXT("Category"), TEXT("Twitch|Events"));
				MetaData->SetValue(NewProp_UserJoined, TEXT("DisplayName"), TEXT("User Joined Twitch Channel"));
				MetaData->SetValue(NewProp_UserJoined, TEXT("Keywords"), TEXT("Twitch User Joined Channel"));
				MetaData->SetValue(NewProp_UserJoined, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_UserLeft, TEXT("Category"), TEXT("Twitch|Events"));
				MetaData->SetValue(NewProp_UserLeft, TEXT("DisplayName"), TEXT("User Left Twitch Channel"));
				MetaData->SetValue(NewProp_UserLeft, TEXT("Keywords"), TEXT("Twitch User Left Channel"));
				MetaData->SetValue(NewProp_UserLeft, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
				MetaData->SetValue(NewProp_ReceivedMessage, TEXT("Category"), TEXT("Twitch|Events"));
				MetaData->SetValue(NewProp_ReceivedMessage, TEXT("DisplayName"), TEXT("Received Message from Twitch"));
				MetaData->SetValue(NewProp_ReceivedMessage, TEXT("Keywords"), TEXT("Twitch Received Message"));
				MetaData->SetValue(NewProp_ReceivedMessage, TEXT("ModuleRelativePath"), TEXT("Public/TwitchComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTwitchComponent(Z_Construct_UClass_UTwitchComponent, &UTwitchComponent::StaticClass, TEXT("UTwitchComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTwitchComponent);
	UPackage* Z_Construct_UPackage__Script_TwitchPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/TwitchPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x7344145C;
			Guid.B = 0xA0B33808;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_TwitchPlugin_TwitchReceivedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserLeft__DelegateSignature();
			Z_Construct_UDelegateFunction_TwitchPlugin_TwitchUserJoin__DelegateSignature();
			Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerConnected__DelegateSignature();
			Z_Construct_UDelegateFunction_TwitchPlugin_TwitchServerDisconnected__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
